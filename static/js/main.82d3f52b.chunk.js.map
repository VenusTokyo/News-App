{"version":3,"sources":["loading.gif","components/Navbar.js","components/NewsItem.js","components/Spinner.js","components/News.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","Link","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","Component","NewsItem","this","props","title","description","imageUrl","newsUrl","author","date","source","src","alt","style","display","justifyContent","right","Date","toGMTString","rel","href","target","Spinner","loading","i","News","fetchMoreData","setState","page","state","url","category","pageSize","fetch","data","json","parsedData","console","log","articles","concat","totalResults","document","setProgress","apiKey","updateNews","dataLength","length","next","hasMore","loader","map","element","key","urlToImage","name","publishedAt","defaultProps","country","App","process","progress","height","color","Switch","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82d3f52b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.5780b10b.gif\";","import React, { Component } from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nexport class Navbar extends Component {\r\n    // static propTypes = {\r\n\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <div className=\"container-fluid\">\r\n                        <Link className=\"navbar-brand\" to=\"/\">DailyDose</Link>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/\">About</Link></li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/business\">Business</Link></li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/entertainment\">Entertainment</Link></li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/general\">General</Link></li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/health\">Health</Link></li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/science\">Science</Link></li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/sports\">Sports</Link></li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/technology\">Technology</Link></li>\r\n\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from 'react'\r\n\r\nexport class NewsItem extends Component {\r\n\r\n    render() {\r\n        let { title, description, imageUrl, newsUrl, author, date, source } = this.props;\r\n        return (\r\n            <div className=\"my-3\">\r\n                <div className=\"card\" >\r\n                    <img src={!imageUrl ? \"https://heuft.com/upload/image/400x267/no_image_placeholder.png\" : imageUrl} className=\"card-img-top\" alt=\"...\" />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\" >{title}<span className=\"position-absolute top-0 start-10  badge rounded-pill bg-danger\" style={{display:'flex',justifyContent:'flex-end',right:0}}>\r\n                            {source}\r\n                           \r\n                        </span></h5>\r\n                        <p className=\"card-text\">{description}...</p>\r\n                        <p className=\"card-text\"><small className=\"text-muted\">By {author} on {new Date(date).toGMTString()} </small></p>\r\n                        <a rel=\"noopener noreferrer\" href={newsUrl} target=\"_blank\" className=\"btn btn-dark btn\">Read More</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewsItem\r\n","import React, { Component } from 'react'\r\nimport loading from '../loading.gif'\r\nexport default class Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <div className='text-center'>\r\n        <img className =\"my-3\"src={loading} alt=\"loading\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport NewsItem from './NewsItem'\r\nimport Spinner from './Spinner';\r\nimport PropTypes from 'prop-types'\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nexport class News extends Component {\r\n    static defaultProps = {\r\n        country: \"in\",\r\n        pageSize: 9,\r\n        category: \"general\"\r\n    }\r\n    static propTypes = {\r\n        country: PropTypes.string,\r\n        pageSize: PropTypes.number,\r\n        category: PropTypes.string\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state =\r\n        {\r\n            articles: [],\r\n            loading: false,\r\n            page: 1,\r\n            totalResults: 0\r\n        }\r\n        document.title = `Daily Dose- ${this.props.category}`\r\n    }\r\n    async updateNews() {\r\n        this.props.setProgress(0)\r\n        const url = `https://newsapi.org/v2/top-headlines?country=in&category=${this.props.category}&apiKey=${this.props.apiKey}&page=${this.state.page}&pageSize=${this.props.pageSize}`\r\n        this.setState({ loading: true })\r\n\r\n        let data = await fetch(url);\r\n        this.props.setProgress(30)\r\n\r\n        let parsedData = await data.json()\r\n        this.props.setProgress(70)\r\n       \r\n        this.setState({\r\n            articles: parsedData.articles,\r\n            totalResults: parsedData.totalResults,\r\n            loading: false\r\n\r\n        })\r\n        this.props.setProgress(100)\r\n\r\n    }\r\n    async componentDidMount() {\r\n\r\n        this.updateNews()\r\n    }\r\n\r\n    // handleNextClick = async () => {\r\n    //     this.setState({ page: this.state.page + 1 });\r\n    //     this.updateNews()\r\n\r\n    // }\r\n    // handlePrevClick = async () => {\r\n    //     this.setState({ page: this.state.page - 1 });\r\n    //     this.updateNews()\r\n    // }\r\n    fetchMoreData = async () => {\r\n        this.setState({ page: this.state.page + 1 })\r\n\r\n        const url = `https://newsapi.org/v2/top-headlines?country=in&category=${this.props.category}&apiKey=df3b674ce85e488bb1dd1b8acfbfde5d&page=${this.state.page}&pageSize=${this.props.pageSize}`\r\n        \r\n        let data = await fetch(url);\r\n        let parsedData = await data.json()\r\n        console.log(parsedData);\r\n        this.setState({\r\n            articles: this.state.articles.concat(parsedData.articles),\r\n            totalResults: parsedData.totalResults\r\n           \r\n\r\n        })\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"text-center my-4\">Daily Dose - Top {this.props.category} Headlines</h1>\r\n                {this.state.loading && <Spinner />}\r\n                <InfiniteScroll\r\n                    dataLength={this.state.articles.length}\r\n                    next={this.fetchMoreData}\r\n                    hasMore={this.state.articles.length !== this.state.totalResults}\r\n                    loader={<Spinner />}\r\n                >\r\n                    <div className=\"container\">\r\n\r\n                        <div className=\"row\">\r\n                            {this.state.articles.map((element) => {\r\n\r\n                                return <div className=\"col-md-4\" key={element.url}>\r\n                                    <NewsItem title={element.title} description={element.description} imageUrl={element.urlToImage} newsUrl={element.url} author={!element.author ? \"Unknown\" : element.author} source={element.source.name} date={element.publishedAt} />\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </InfiniteScroll>\r\n                {/* <div className=\"d-flex justify-content-between\">\r\n\r\n                    <button disabled={this.state.page <= 1} type=\"button\" className=\"btn btn-dark\" onClick={this.handlePrevClick}>&larr; Previous</button>\r\n                    <button disabled={this.state.page + 1 > Math.ceil(this.state.totalResults / this.props.pageSize)} type=\"button\" className=\"btn btn-dark\" onClick={this.handleNextClick}>Next &rarr;</button>\r\n                </div> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default News\r\n","import React from 'react';\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { Component } from 'react'\nimport News from './components/News';\nimport LoadingBar from 'react-top-loading-bar'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nexport default class App extends Component {\n  apiKey=process.env.REACT_APP_NEWS_API;\n  state={\n    progress:10\n  }\n  setProgress=(progress)=>{\n    this.setState({progress: progress})\n  }\n  render() {\n    return (\n      <div>\n        <Router>\n        <div>\n        <Navbar/>\n        <LoadingBar\n        height={4}\n        color='#f11946'\n        progress={this.state.progress}\n        \n      />\n        <Switch>\n          <Route exact path=\"/\"><News setProgress={this.setProgress} apiKey={this.apiKey} pageSize={9} key=\"general\" country=\"in\" category=\"general\"/></Route>\n          <Route exact path=\"/business\"><News setProgress={this.setProgress} apiKey={this.apiKey} pageSize={9} key=\"business\" country=\"in\" category=\"business\"/></Route>\n          <Route exact path=\"/entertainment\"><News setProgress={this.setProgress} apiKey={this.apiKey} pageSize={9} key=\"entertainment\" country=\"in\" category=\"entertainment\"/></Route>\n          <Route exact path=\"/general\"><News setProgress={this.setProgress} apiKey={this.apiKey} pageSize={9} key=\"general\" country=\"in\" category=\"general\"/></Route>\n          <Route exact path=\"/health\"><News setProgress={this.setProgress} apiKey={this.apiKey} pageSize={9} key=\"health\" country=\"in\" category=\"health\"/></Route>\n          <Route exact path=\"/science\"><News setProgress={this.setProgress} apiKey={this.apiKey} pageSize={9} key=\"science\" country=\"in\" category=\"science\"/></Route>\n          <Route exact path=\"/sports\"><News setProgress={this.setProgress} apiKey={this.apiKey} pageSize={9} key=\"sports\" country=\"in\" category=\"sports\"/></Route>\n          <Route exact path=\"/technology\"><News setProgress={this.setProgress} apiKey={this.apiKey} pageSize={9} key=\"technology\" country=\"in\" category=\"technology\"/></Route>\n          \n        </Switch>\n        </div>\n          \n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}